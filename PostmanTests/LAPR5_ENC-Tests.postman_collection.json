{
	"info": {
		"_postman_id": "cfcb4ce0-b97c-4eac-9bd1-13c936540cdf",
		"name": "LAPR5_ENC-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Order",
			"item": [
				{
					"name": "create order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"itens\":[],\n\t\"preco\":100\n}"
						},
						"url": {
							"raw": "{{url2}}api/encomenda?",
							"host": [
								"{{url2}}api"
							],
							"path": [
								"encomenda"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "criar encomndas"
					},
					"response": []
				},
				{
					"name": "get all orders",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url2}}api/encomenda",
							"host": [
								"{{url2}}api"
							],
							"path": [
								"encomenda"
							]
						},
						"description": "get todas as encomendas"
					},
					"response": []
				},
				{
					"name": "get order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca3c5f1b-7af8-4aef-a16d-9d234954d1d5",
								"exec": [
									"//Verifica o sucesso do request",
									"pm.test(\"Successful GET request code(200/201/202)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"});",
									"",
									"//Verifica se os campos existe na resposta com os seguintes valores",
									"",
									"/*",
									"pm.test(\"Teste ao id anterior na bd na base de dados \", function () {",
									"    var jsonData = pm.response.json();",
									"    //Informação do acabamento",
									"     pm.expect(jsonData.nome).to.eql(\"Polido\");",
									"",
									"});",
									"",
									"",
									"//Verifica se os campos existe na resposta",
									"tests[\"Successful GET requestBody\"] = responseBody.has(\"acabamentoId\") && responseBody.has(\"nome\") ",
									"tests[\"Successful GET resquestBody\"]",
									"*/",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url2}}api/encomenda/1",
							"host": [
								"{{url2}}api"
							],
							"path": [
								"encomenda",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"itens\":[],\n\t\"preco\":100\n}"
						},
						"url": {
							"raw": "{{url2}}api/encomenda?",
							"host": [
								"{{url2}}api"
							],
							"path": [
								"encomenda"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "criar encomndas"
					},
					"response": []
				}
			]
		}
	]
}